{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Desktop/YoutubeViewer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Desktop/YoutubeViewer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/apple/Desktop/YoutubeViewer/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/apple/Desktop/YoutubeViewer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport YTSearch from \"youtube-api-search-typed/dist\";\nimport SearchBar from \"./components/search_bar\";\nimport VideoList from \"./components/video_list\";\nimport VideoDetail from \"./components/video_detail\";\nimport { VideosDummyData } from './videosData';\nimport { useDispatch } from \"react-redux\";\nimport { addComment } from './store/commentsSlice';\nimport { getPrimaryComments } from './service/youtube.service';\nimport { CommentsData } from './commentsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const API_KEY = \"AIzaSyBZq4Ez5kKMTXITuTpaDxlu98MDr4g05fY\";\nvar API_KEY = 'AIzaSyBZq4Ez5kKMTXITuTpaDxlu98MDr4g05fY';\nfunction App() {\n  _s();\n  var dispatch = useDispatch();\n  var _useState = useState(Array()),\n    _useState2 = _slicedToArray(_useState, 2),\n    videos = _useState2[0],\n    setVideos = _useState2[1];\n  var _useState3 = useState(Array()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    comments = _useState4[0],\n    setComments = _useState4[1];\n  var _useState5 = useState(Array()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedVideo = _useState6[0],\n    setSelectedVideo = _useState6[1];\n  useEffect(function () {\n    var _VideosDummyData$, _VideosDummyData$$id;\n    console.log('VideosDummyData', VideosDummyData);\n    videoSearch(\"liverpool\");\n    fetchComments((_VideosDummyData$ = VideosDummyData[0]) === null || _VideosDummyData$ === void 0 ? void 0 : (_VideosDummyData$$id = _VideosDummyData$.id) === null || _VideosDummyData$$id === void 0 ? void 0 : _VideosDummyData$$id.videoId);\n  }, []);\n\n  // const updateComments = async (data: any) => {\n  //   setComments(data);\n  // }\n\n  /**\n   * Function that gets the search-term and returns a list of videos\n   * @param {*} term\n   */\n  var videoSearch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(term) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            console.log('vid --', VideosDummyData);\n            // _.debounce((term: string) => {\n            YTSearch({\n              key: API_KEY,\n              term: term\n            }, function (videos) {\n              console.log(\"videos\", videos);\n              console.log(\"videos\", JSON.stringify(videos));\n              setVideos(videos);\n              setSelectedVideo(videos[0]);\n              fetchComments(videos[0].id.videoId);\n            });\n            // }, 300);\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function videoSearch(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onVideoSelection = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(video) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            setSelectedVideo(video);\n            fetchComments(video.id.videoId);\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function onVideoSelection(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchComments = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(videoId) {\n      var comments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('on fetch comment', videoId);\n            _context3.next = 3;\n            return getPrimaryComments(videoId);\n          case 3:\n            comments = _context3.sent;\n            // console.log('comments from api', comments);\n            // console.log('comments from api', JSON.stringify(comments));\n\n            dispatch(addComment(CommentsData.items));\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function fetchComments(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * Lifecycle method that is responsible to make the component visible to the browser\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearchTermChange: videoSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), Object.keys(selectedVideo).length > 0 ? /*#__PURE__*/_jsxDEV(VideoDetail, {\n      video: selectedVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : null, videos.length > 0 ? /*#__PURE__*/_jsxDEV(VideoList, {\n      onVideoSelect: function onVideoSelect(selectedVideo) {\n        return onVideoSelection(selectedVideo);\n      },\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zm1lagT/clVct+rc9lF/Cb6ik+M=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","YTSearch","SearchBar","VideoList","VideoDetail","VideosDummyData","useDispatch","addComment","getPrimaryComments","CommentsData","API_KEY","App","dispatch","Array","videos","setVideos","comments","setComments","selectedVideo","setSelectedVideo","console","log","videoSearch","fetchComments","id","videoId","term","key","JSON","stringify","onVideoSelection","video","items","Object","keys","length"],"sources":["/Users/apple/Desktop/YoutubeViewer/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport _, { set } from \"lodash\";\nimport YTSearch from \"youtube-api-search-typed/dist\";\nimport SearchBar from \"./components/search_bar\";\nimport VideoList from \"./components/video_list\";\nimport VideoDetail from \"./components/video_detail\";\nimport { VideosDummyData } from './videosData';\nimport { RootState } from './store/store';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment } from './store/commentsSlice';\nimport { getPrimaryComments } from './service/youtube.service';\nimport { CommentsData } from './commentsData';\nimport CommentList from \"./components/comment_list\";\n\n// const API_KEY = \"AIzaSyBZq4Ez5kKMTXITuTpaDxlu98MDr4g05fY\";\nconst API_KEY = 'AIzaSyBZq4Ez5kKMTXITuTpaDxlu98MDr4g05fY';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [videos, setVideos] = useState(Array<any[]>());\n  const [comments, setComments] = useState(Array<any[]>());\n  const [selectedVideo, setSelectedVideo] = useState(Array<any[]>());\n\n  useEffect(() => {\n    console.log('VideosDummyData', VideosDummyData);\n    videoSearch(\"liverpool\");\n    fetchComments(VideosDummyData[0]?.id?.videoId);\n  }, []);\n\n  // const updateComments = async (data: any) => {\n  //   setComments(data);\n  // }\n\n  /**\n   * Function that gets the search-term and returns a list of videos\n   * @param {*} term\n   */\n  const videoSearch = async (term: string) => {\n    console.log('vid --', VideosDummyData);\n    // _.debounce((term: string) => {\n    YTSearch({ key: API_KEY, term: term }, (videos: any) => {\n      console.log(\"videos\", videos);\n      console.log(\"videos\", JSON.stringify(videos));\n      setVideos(videos);\n      setSelectedVideo(videos[0]);\n      fetchComments(videos[0].id.videoId);\n    });\n    // }, 300);\n\n  }\n\n  const onVideoSelection = async (video: any) => {\n    setSelectedVideo(video);\n    fetchComments(video.id.videoId);\n  }\n\n  const fetchComments = async (videoId: string) => {\n    console.log('on fetch comment', videoId);\n    const comments = await getPrimaryComments(videoId);\n    // console.log('comments from api', comments);\n    // console.log('comments from api', JSON.stringify(comments));\n\n    dispatch(addComment(CommentsData.items));\n  }\n\n  /**\n   * Lifecycle method that is responsible to make the component visible to the browser\n   */\n  return (\n    <div>\n      <SearchBar onSearchTermChange={videoSearch} />\n      {Object.keys(selectedVideo).length > 0\n        ?\n        <VideoDetail video={selectedVideo} />\n        :\n        null\n      }\n      {videos.length > 0 \n      ?\n        <VideoList\n          onVideoSelect={(selectedVideo: any) => onVideoSelection(selectedVideo)}\n          videos={videos}\n        />\n      :\n        null\n      }\n      \n    </div>\n  )\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}